apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

//apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/master/gradle-mvn-push.gradle'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version


    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        jumboMode true
    }

}

dependencies {
    implementation "com.android.support:appcompat-v7:$support_lib_version"

    api "com.github.walleth:kethereum:$kethereum_version"

    androidTestImplementation "com.android.support.test:runner:$test_runner_version"
    androidTestImplementation "com.android.support.test:rules:$test_runner_version"
//    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_version", {
//        exclude group: "com.android.support", module: "support-annotations"
//    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}
repositories {
    mavenCentral()
}

//
//task androidJavadocs(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//    classifier = 'javadoc'
//    from androidJavadocs.destinationDir
//}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
//    archives androidJavadocsJar
}